const  bcrypt  =  require("bcrypt");const  user  =  require("../config/database");const  jwt  =  require("jsonwebtoken");require("dotenv").config();exports.registerClient = async (request, response) => {    const { firstname, lastname, patronymic, email, password } = request.body;    try {        const  data  =  await user.query(`SELECT * FROM client WHERE email= $1;`, [email]); //Checking if user already exists        const  arr  =  data.rows;        if (arr.length  !==  0) {            return  response.status(400).json({                error: "Email already there, No need to register again.",            });        }        else {            bcrypt.hash(password, 10, (err, hash) => {                if (err)                    response.status(err).json({                        error: "Server error",                    });                const  client  = {                    firstname,                    lastname,                    patronymic,                    email,                    password: hash,                };                let flag = 1; //Declaring a flag//Inserting data into the database                user.query(`INSERT INTO client (firstname,lastname,patronymic, email,password) VALUES ($1,$2,$3,$4,$5);`, [client.firstname, client.lastname, client.patronymic, client.email, client.password], (err) => {                        if (err) {                            flag  =  0; //If user is not inserted is not inserted to database assigning flag as 0/false.                            console.error(err);                            return  response.status(500).json({                                error: "Database error"                            })                        }                        else {                            flag  =  1;                            response.status(200).send({ message: 'User added to database' });                        }                    })                if (flag) {                    const token  = jwt.sign(                        {                            email: client.email                        },                        process.env.SECRET_KEY);                    return response.status(201).json({                        client: { firstname, lastname, patronymic, email,password },                        token: token                    });                }            });        }    }    catch (err) {        console.log(err);        response.status(500).json({            error: "Database error while registring user!", //Database connection error        });    }}