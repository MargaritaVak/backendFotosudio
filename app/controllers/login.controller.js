const  bcrypt  =  require("bcrypt");const  user  =  require("../config/database");const  jwt  =  require("jsonwebtoken");require("dotenv").config();exports.loginClient = async (request, response) => {    const { email, password} = request.body;    try {        const data = await user.query(`SELECT * FROM client WHERE email= $1;`, [email]) //Verifying if the client exists in the database        const client = data.rows;        if (client.length === 0) {            response.status(400).json({                error: "User is not registered, Sign Up first",            });        }        else {            bcrypt.compare(password, client[0].password, (err, result) => { //Comparing the hashed password                if (err) {                    response.status(500).json({                        error: "Server error",                    });                } else if (result === true) { //Checking if credentials match                    const token = jwt.sign(                        {                            email: email,                        },                        process.env.SECRET_KEY                    );                    response.status(200).header("auth-token", token).send({ "token": token, client });                }                else {//Declaring the errors                    if (result !== true)                        response.status(400).json({                            error: "Enter correct password!",                        });                }            })        }    } catch (err) {        console.log(err);        response.status(500).json({            error: "Database error occurred while signing in!", //Database connection error        });    };};